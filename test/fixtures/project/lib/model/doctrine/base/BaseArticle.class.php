<?php

/**
 * BaseArticle
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $author_id
 * @property string $title
 * @property string $content
 * @property Author $Author
 * @property Doctrine_Collection $Comments
 * 
 * @method integer             getAuthorId()  Returns the current record's "author_id" value
 * @method string              getTitle()     Returns the current record's "title" value
 * @method string              getContent()   Returns the current record's "content" value
 * @method Author              getAuthor()    Returns the current record's "Author" value
 * @method Doctrine_Collection getComments()  Returns the current record's "Comments" collection
 * @method Article             setAuthorId()  Sets the current record's "author_id" value
 * @method Article             setTitle()     Sets the current record's "title" value
 * @method Article             setContent()   Sets the current record's "content" value
 * @method Article             setAuthor()    Sets the current record's "Author" value
 * @method Article             setComments()  Sets the current record's "Comments" collection
 * 
 * @package    ##PROJECT_NAME##
 * @subpackage model
 * @author     ##AUTHOR_NAME##
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseArticle extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('article');
        $this->hasColumn('author_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('content', 'string', 5000, array(
             'type' => 'string',
             'length' => 5000,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Author', array(
             'local' => 'author_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('Comment as Comments', array(
             'local' => 'id',
             'foreign' => 'article_id'));

        $i18n0 = new Doctrine_Template_I18n(array(
             'fields' => 
             array(
              0 => 'title',
              1 => 'content',
              2 => 'slug',
             ),
             ));
        $sluggable1 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'title',
             ),
             'uniqueBy' => 
             array(
              0 => 'lang',
              1 => 'title',
             ),
             'canUpdate' => false,
             ));
        $i18n0->addChild($sluggable1);
        $this->actAs($i18n0);
    }
}